{
  "definitions": {
    "WebContent": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "format": "binary"
        },
        "contentType": {
          "type": "string"
        },
        "charSet": {
          "type": "string"
        }
      }
    },
    "LoginProvider": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the provider"
        },
        "status": {
          "type": "string",
          "description": "The user status @ the provider. LoggedIn or NotLoggedIn"
        },
        "script": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri"
          },
          "description": "The script uris"
        },
        "meta": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoginProviderMeta"
          },
          "description": "The script uris"
        },
        "buttonHtml": {
          "type": "string",
          "description": "The html for the login button"
        }
      }
    },
    "LoginProviderMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the meta data"
        },
        "content": {
          "type": "string",
          "description": "The content of the meta data"
        }
      },
      "description": "The meta structure is placed in the header section of a html document"
    },
    "OpenIDConnnectDiscovery": {
      "properties": {
        "issuer": {
          "description": "REQUIRED. URL using the https scheme with no query or fragment component that the OP asserts as its Issuer Identifier. If Issuer discovery is supported (see Section 2), this value MUST be identical to the issuer value returned by WebFinger. This also MUST be identical to the iss Claim value in ID Tokens issued from this Issuer.",
          "type": "string",
          "format": "uri"
        },
        "authorization_endpoint": {
          "description": "REQUIRED. URL of the OP's OAuth 2.0 Authorization Endpoint [OpenID.Core].",
          "type": "string",
          "format": "uri"
        },
        "token_endpoint": {
          "description": "URL of the OP's OAuth 2.0 Token Endpoint [OpenID.Core]. This is REQUIRED unless only the Implicit Flow is used.",
          "type": "string",
          "format": "uri"
        },
        "userinfo_endpoint": {
          "description": "RECOMMENDED. URL of the OP's UserInfo Endpoint [OpenID.Core]. This URL MUST use the https scheme and MAY contain port, path, and query parameter components.",
          "type": "string",
          "format": "uri"
        },
        "revocation_endpoint": {
          "description": "",
          "type": "string",
          "format": "uri"
        },
        "device_authorization_endpoint": {
          "description": "OPTIONAL. URL of the authorization server's device authorization endpoint defined in Section 3.1.",
          "type": "string",
          "format": "uri"
        },
        "jwks_uri": {
          "description": "REQUIRED. URL of the OP's JSON Web Key Set [JWK] document. This contains the signing key(s) the RP uses to validate signatures from the OP. The JWK Set MAY also contain the Server's encryption key(s), which are used by RPs to encrypt requests to the Server. When both signing and encryption keys are made available, a use (Key Use) parameter value is REQUIRED for all keys in the referenced JWK Set to indicate each key's intended usage. Although some algorithms allow the same key to be used for both signatures and encryption, doing so is NOT RECOMMENDED, as it is less secure. The JWK x5c parameter MAY be used to provide X.509 representations of keys provided. When used, the bare key values MUST still be present and MUST match those in the certificate.",
          "type": "string",
          "format": "uri"
        },
        "scopes_supported": {
          "description": "RECOMMENDED. JSON array containing a list of the OAuth 2.0 [RFC6749] scope values that this server supports. The server MUST support the openid scope value. Servers MAY choose not to advertise some supported scope values even when this parameter is used, although those defined in [OpenID.Core] SHOULD be listed, if supported.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "grant_types_supported": {
          "description": "OPTIONAL. JSON array containing a list of the OAuth 2.0 Grant Type values that this OP supports. Dynamic OpenID Providers MUST support the authorization_code and implicit Grant Type values and MAY support other Grant Types. If omitted, the default value is [\"authorization_code\", \"implicit\"]\"",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "response_modes_supported": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subject_types_supported": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id_token_signing_alg_values_supported": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "end_session_endpoint": {
          "type": "string"
        },
        "response_types_supported": {
          "description": "REQUIRED. JSON array containing a list of the OAuth 2.0 response_type values that this OP supports. Dynamic OpenID Providers MUST support the code, id_token, and the token id_token Response Type values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "claims_supported": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "token_endpoint_auth_methods_supported": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "code_challenge_methods_supported": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "request_uri_parameter_supported": {
          "type": "boolean"
        },
        "http_logout_supported": {
          "type": "boolean"
        },
        "frontchannel_logout_supported": {
          "type": "boolean"
        },
        "rbac_url": {
          "type": "string",
          "format": "uri"
        },
        "msgraph_host": {
          "type": "string"
        },
        "cloud_graph_host_name": {
          "type": "string"
        },
        "cloud_instance_name": {
          "type": "string"
        },
        "tenant_region_scope": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OpenIDKeys": {
      "properties": {
        "Keys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenIDKey"
          }
        }
      },
      "type": "object"
    },
    "OpenIDKey": {
      "properties": {
        "alg": {
          "type": "string",
          "description": "(Algorithm) Parameter"
        },
        "kty": {
          "type": "string",
          "description": "(Key Type) Parameter"
        },
        "use": {
          "type": "string",
          "description": "(Public Key Use) Parameter"
        },
        "kid": {
          "type": "string",
          "description": "(Key ID) Parameter"
        },
        "x5u": {
          "type": "string",
          "format": "uri",
          "description": "(X.509 URL) Parameter"
        },
        "x5t": {
          "type": "string",
          "description": "(X.509 Certificate SHA-1 Thumbprint) Parameter"
        },
        "x5c": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "(X.509 Certificate Chain) Parameter"
        },
        "n": {
          "type": "string"
        },
        "e": {
          "type": "string"
        },
        "issuer": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TokenResponse": {
      "properties": {
        "access_token": {
          "type": "string",
          "description": "REQUIRED.  The access token issued by the authorization server."
        },
        "token_type": {
          "type": "string",
          "description": "REQUIRED.  The type of the token issued as described in Section 7.1.  Value is case insensitive."
        },
        "expires_in": {
          "type": "string",
          "description": "RECOMMENDED.  The lifetime in seconds of the access token.  For example, the value '3600' denotes that the access token will expire in one hour from the time the response was generated. If omitted, the authorization server SHOULD provide the expiration time via other means or document the default value."
        },
        "refresh_token": {
          "type": "string",
          "description": "OPTIONAL.  The refresh token, which can be used to obtain new access tokens using the same authorization grant as describedin Section 6."
        },
        "scope": {
          "type": "array",
          "items": {
            "type": "string",
            "collectionFormat": "ssv"
          },
          "description": "OPTIONAL, if identical to the scope requested by the client; otherwise, REQUIRED.  The scope of the access token as described by Section 3.3."
        }
      },
      "type": "object"
    }
  }
}
