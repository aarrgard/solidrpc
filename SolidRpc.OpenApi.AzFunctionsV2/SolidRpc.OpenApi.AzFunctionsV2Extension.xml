<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SolidRpc.OpenApi.AzFunctionsV2Extension</name>
    </assembly>
    <members>
        <member name="T:SolidRpc.OpenApi.AzFunctions.HttpFunction">
            <summary>
            Handles timer triggers
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.HttpFunction.Run(System.Net.Http.HttpRequestMessage,Microsoft.Extensions.Logging.ILogger,System.IServiceProvider,System.Threading.CancellationToken)">
            <summary>
            Runs the trigger logic.
            </summary>
            <param name="req"></param>
            <param name="log"></param>
            <param name="serviceProvider"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.QueueFunction">
            <summary>
            Handles queue triggers
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.QueueFunction.Run(System.String,System.String,Microsoft.Extensions.Logging.ILogger,System.IServiceProvider,System.Threading.CancellationToken)">
            <summary>
            Runs the trigger logic.
            </summary>
            <param name="message"></param>
            <param name="id"></param>
            <param name="log"></param>
            <param name="serviceProvider"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.TimerFunction">
            <summary>
            Handles timer triggers
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.TimerFunction.Run(Microsoft.Azure.WebJobs.TimerInfo,Microsoft.Extensions.Logging.ILogger,System.IServiceProvider,System.String,System.Threading.CancellationToken)">
            <summary>
            Runs the trigger logic.
            </summary>
            <param name="myTimer"></param>
            <param name="log"></param>
            <param name="serviceProvider"></param>
            <param name="timerId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctionsV2Extension.Services.SolidRpcHostAzFunctionsV2">
            <summary>
            The solid rpc host in an azure functions environment
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctionsV2Extension.Services.SolidRpcHostAzFunctionsV2.#ctor(Microsoft.Extensions.Logging.ILogger{SolidRpc.OpenApi.AspNetCore.Services.SolidRpcHost},System.IServiceProvider,Microsoft.Extensions.Configuration.IConfiguration,SolidRpc.Abstractions.OpenApi.Binder.IMethodBinderStore,SolidProxy.Core.Configuration.Runtime.ISolidProxyConfigurationStore,SolidRpc.OpenApi.AzFunctions.Services.ITimerStore,SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler)">
            <summary>
            Constructs a new instance
            </summary>
            <param name="logger"></param>
            <param name="serviceProvider"></param>
            <param name="configuration"></param>
            <param name="methodBinderStore"></param>
            <param name="configurationStore"></param>
            <param name="timerStore"></param>
            <param name="functionHandler"></param>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctionsV2Extension.Services.SolidRpcHostStoreBlobStorage">
            <summary>
            Blob storage for host instances
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctionsV2Extension.Services.SolidRpcHostStoreBlobStorage.#ctor(Microsoft.Extensions.Logging.ILogger{SolidRpc.OpenApi.AzFunctionsV2Extension.Services.SolidRpcHostStoreBlobStorage},Microsoft.Extensions.Configuration.IConfiguration,SolidRpc.Abstractions.Serialization.ISerializerFactory)">
            <summary>
            Constructs a new instance
            </summary>
            <param name="logger"></param>
            <param name="configuration"></param>
            <param name="serializerFactory"></param>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctionsV2Extension.Services.SolidRpcHostStoreBlobStorage.AddHostInstanceAsync(SolidRpc.Abstractions.Types.SolidRpcHostInstance,System.Threading.CancellationToken)">
            <summary>
            Adds an instance
            </summary>
            <param name="hostInstance"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctionsV2Extension.Services.SolidRpcHostStoreBlobStorage.ListHostInstancesAsync(System.Threading.CancellationToken)">
            <summary>
            Lists the stored instances
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctionsV2Extension.Services.SolidRpcHostStoreBlobStorage.RemoveHostInstanceAsync(SolidRpc.Abstractions.Types.SolidRpcHostInstance,System.Threading.CancellationToken)">
            <summary>
            Removes the host instance
            </summary>
            <param name="hostInstance"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctionsV2Extension.Services.SolidRpcRateLimitTableStorage">
            <summary>
            The rate limit service using the table storage
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctionsV2Extension.Services.SolidRpcRateLimitTableStorage.#ctor(Microsoft.Extensions.Logging.ILogger{SolidRpc.OpenApi.AzFunctionsV2Extension.Services.SolidRpcRateLimitTableStorage},Microsoft.Extensions.Configuration.IConfiguration,SolidRpc.Abstractions.Serialization.ISerializerFactory)">
            <summary>
            Constructs a new instance
            </summary>
            <param name="logger"></param>
            <param name="configuration"></param>
            <param name="serializerFactory"></param>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctionsV2Extension.Services.SolidRpcRateLimitTableStorage.GetSingeltonTokenAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Returns the singleton token
            </summary>
            <param name="resourceName"></param>
            <param name="timeout"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctionsV2Extension.Services.SolidRpcRateLimitTableStorage.GetRateLimitTokenAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Returns the rate limit token
            </summary>
            <param name="resourceName"></param>
            <param name="timeout"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctionsV2Extension.Services.SolidRpcRateLimitTableStorage.GetRateLimitTokenAsync(System.String,System.TimeSpan,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Returns the rate limit token
            </summary>
            <param name="resourceName"></param>
            <param name="timeout"></param>
            <param name="singelton"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctionsV2Extension.Services.SolidRpcRateLimitTableStorage.ReturnRateLimitTokenAsync(SolidRpc.Abstractions.Types.RateLimit.RateLimitToken,System.Threading.CancellationToken)">
            <summary>
            REturns the rate limit token
            </summary>
            <param name="rateLimitToken"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctionsV2Extension.Services.SolidRpcRateLimitTableStorage.GetRateLimitSettingsAsync(System.Threading.CancellationToken)">
            <summary>
            Returns the rate limit settings
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctionsV2Extension.Services.SolidRpcRateLimitTableStorage.UpdateRateLimitSetting(SolidRpc.Abstractions.Types.RateLimit.RateLimitSetting,System.Threading.CancellationToken)">
            <summary>
            Updates the rate limit settings
            </summary>
            <param name="setting"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.IServiceCollectionExtensions">
            <summary>
            Extension methods fro the http request
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.IServiceCollectionExtensions.AddSolidRpcRateLimitTableStorage(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{SolidRpc.Abstractions.OpenApi.Proxy.ISolidRpcOpenApiConfig,System.Boolean})">
            <summary>
            Returns the configuration builder
            </summary>
            <param name="services"></param>
            <param name="configurator"></param>
            <returns></returns>
        </member>
    </members>
</doc>
