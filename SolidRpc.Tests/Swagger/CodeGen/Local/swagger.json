{
  "swagger": "2.0",
  "info": {
    "title": "My API",
    "version": "v1"
  },
  "host": "localhost:5053",
  "schemes": [
    "http"
  ],
  "paths": {
    "/MvcProxyTest/ProxyBooleanInQuery": {
      "get": {
        "tags": [
          "MvcProxyTest"
        ],
        "summary": "Sends a boolean back and forth between client and server",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "b",
            "description": "The boolean to proxy",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/MvcProxyTest/ProxyShortInQuery": {
      "get": {
        "tags": [
          "MvcProxyTest"
        ],
        "summary": "Sends a short back and forth between client and server",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "s",
            "description": "The short to proxy",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/MvcProxyTest/ProxyByteInQuery": {
      "get": {
        "tags": [
          "MvcProxyTest"
        ],
        "summary": "Sends a byte back and forth between client and server",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "b",
            "description": "The byte to proxy",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/MvcProxyTest/ProxyIntInQuery": {
      "get": {
        "tags": [
          "MvcProxyTest"
        ],
        "summary": "Sends an integer back and forth between client and server",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "i",
            "description": "The interger to proxy",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/MvcProxyTest/ProxyIntInForm": {
      "post": {
        "tags": [
          "MvcProxyTest"
        ],
        "summary": "Sends an integer back and forth between client and server",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "i",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/MvcProxyTest/ProxyIntInHeader": {
      "get": {
        "tags": [
          "MvcProxyTest"
        ],
        "summary": "Sends an integer back and forth between client and server",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "i",
            "description": "The interger to proxy",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/MvcProxyTest/ProxyIntInRoute/{i}": {
      "get": {
        "tags": [
          "MvcProxyTest"
        ],
        "summary": "Sends an integer back and forth between client and server",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "i",
            "description": "The interger to proxy",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/MvcProxyTest/ProxyIntArrArrInQuery": {
      "get": {
        "tags": [
          "MvcProxyTest"
        ],
        "summary": "Sends an integer back and forth between client and server",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "iarr",
            "description": "The interger to proxy",
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            }
          }
        }
      }
    },
    "/MvcProxyTest/ProxyLongInQuery": {
      "get": {
        "tags": [
          "MvcProxyTest"
        ],
        "summary": "Sends an long back and forth between client and server",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "l",
            "description": "The long to proxy",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/MvcProxyTest/ProxyFloatInQuery": {
      "get": {
        "tags": [
          "MvcProxyTest"
        ],
        "summary": "Sends a float back and forth between client and server",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "f",
            "description": "The float to proxy",
            "type": "number",
            "format": "float"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "float",
              "type": "number"
            }
          }
        }
      }
    },
    "/MvcProxyTest/ProxyDoubleInQuery": {
      "get": {
        "tags": [
          "MvcProxyTest"
        ],
        "summary": "Sends a double back and forth between client and server",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "d",
            "description": "The double to proxy",
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        }
      }
    },
    "/MvcProxyTest/ProxyStringInQuery": {
      "get": {
        "tags": [
          "MvcProxyTest"
        ],
        "summary": "Sends a string back and forth between client and server",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "s",
            "description": "The string to proxy",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/MvcProxyTest/ProxyGuidInQuery": {
      "get": {
        "tags": [
          "MvcProxyTest"
        ],
        "summary": "Sends a guid back and forth between client and server",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "g",
            "description": "The guid to proxy",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/MvcProxyTest/ProxyDateTimeOffsetInQuery": {
      "get": {
        "tags": [
          "MvcProxyTest"
        ],
        "summary": "Sends a datetimeoffset back and forth between client and server",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "d",
            "description": "The datetime to proxy",
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        }
      }
    },
    "/MvcProxyTest/ProxyDateTimeInQuery": {
      "get": {
        "tags": [
          "MvcProxyTest"
        ],
        "summary": "Sends a datetime back and forth between client and server",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "d",
            "description": "The datetime to proxy",
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        }
      }
    },
    "/MvcProxyTest/ProxyDateTimeArrayInQuery": {
      "get": {
        "tags": [
          "MvcProxyTest"
        ],
        "summary": "Sends a datetime back and forth between client and server",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "dArr",
            "description": "The datetime to proxy",
            "type": "array",
            "items": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "format": "date-time",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/MvcProxyTest/ProxyDateTimeArrayInForm": {
      "post": {
        "tags": [
          "MvcProxyTest"
        ],
        "summary": "Sends a datetime back and forth between client and server",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "dArr",
            "type": "array",
            "items": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "format": "date-time",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/MvcProxyTest/ProxyStream": {
      "post": {
        "tags": [
          "MvcProxyTest"
        ],
        "summary": "Sends a stream back and forth between client and server",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "ff",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": null,
            "schema": {
              "format": "binary",
              "type": "string"
            }
          }
        }
      }
    },
    "/MvcProxyTest/ProxyComplexObject1InBody": {
      "post": {
        "tags": [
          "MvcProxyTest"
        ],
        "summary": "Sends a complex object back and forth between client and server",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The complex object to proxy",
            "schema": {
              "$ref": "#/definitions/ComplexObject1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComplexObject1"
            }
          }
        }
      }
    },
    "/MvcServerTest/Index": {
      "get": {
        "tags": [
          "MvcServerTest"
        ],
        "summary": "Returns data for the index page.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "definitions": {
    "ComplexObject1": {
      "description": "ComplexObject1",
      "type": "object",
      "properties": {
        "value1": {
          "description": "Value1",
          "type": "string"
        },
        "value2": {
          "description": "Value2",
          "type": "string"
        },
        "children": {
          "description": "The children",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComplexObject1"
          }
        }
      }
    }
  }
}