{
  "swagger": "2.0",
  "info": {
    "title": "SolidRpc.Test.Petstore",
    "contact": {
      "name": "Authors",
      "url": "https://github.com/aarrgard/solidrpc/wiki"
    },
    "license": {
      "name": "http://www.apache.org/licenses/LICENSE-2.0.html",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.4.5"
  },
  "host": "localhost",
  "basePath": "/SolidRpc/Test/Petstore",
  "paths": {
    "/Services/IPet/AddPet": {
      "post": {
        "tags": [
          "IPet"
        ],
        "description": "Add a new pet to the store",
        "operationId": "AddPet",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Services/IPet/DeletePet": {
      "post": {
        "tags": [
          "IPet"
        ],
        "description": "Deletes a pet",
        "operationId": "DeletePet",
        "parameters": [
          {
            "name": "petId",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "int64",
            "description": "Pet id to delete"
          },
          {
            "name": "api_key",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Services/IPet/FindPetsByStatus": {
      "post": {
        "tags": [
          "IPet"
        ],
        "description": "Finds Pets by status Multiple status values can be provided with comma separated strings",
        "operationId": "FindPetsByStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "array",
            "description": "Status values that need to be considered for filter",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response type",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            }
          }
        }
      }
    },
    "/Services/IPet/FindPetsByTags": {
      "post": {
        "tags": [
          "IPet"
        ],
        "description": "Finds Pets by tags Muliple tags can be provided with comma separated strings. Use\\ \\ tag1, tag2, tag3 for testing.",
        "operationId": "FindPetsByTags",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "type": "array",
            "description": "Tags to filter by",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response type",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            }
          }
        }
      }
    },
    "/Services/IPet/GetPetById": {
      "post": {
        "tags": [
          "IPet"
        ],
        "description": "Find pet by ID Returns a single pet",
        "operationId": "GetPetById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "petId",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "int64",
            "description": "ID of pet to return"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          }
        }
      }
    },
    "/Services/IPet/UpdatePet": {
      "post": {
        "tags": [
          "IPet"
        ],
        "description": "Update an existing pet",
        "operationId": "UpdatePet",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Services/IPet/UpdatePetWithForm": {
      "post": {
        "tags": [
          "IPet"
        ],
        "description": "Updates a pet in the store with form data",
        "operationId": "UpdatePetWithForm",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Updated status of the pet"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Updated name of the pet"
          },
          {
            "name": "petId",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "int64",
            "description": "ID of pet that needs to be updated"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Services/IPet/UploadFile": {
      "post": {
        "tags": [
          "IPet"
        ],
        "description": "uploads an image",
        "operationId": "UploadFile",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file",
            "description": "file to upload"
          },
          {
            "name": "additionalMetadata",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Additional data to pass to server"
          },
          {
            "name": "petId",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "int64",
            "description": "ID of pet to update"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/Services/IStore/DeleteOrder": {
      "post": {
        "tags": [
          "IStore"
        ],
        "description": "Delete purchase order by ID For valid response try integer IDs with positive integer value.\\ \\ Negative or non-integer values will generate API errors",
        "operationId": "DeleteOrder",
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "int64",
            "description": "ID of the order that needs to be deleted"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Services/IStore/GetInventory": {
      "post": {
        "tags": [
          "IStore"
        ],
        "description": "Returns pet inventories by status Returns a map of status codes to quantities",
        "operationId": "GetInventory",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Services.Store.GetInventory.Response200"
            }
          }
        }
      }
    },
    "/Services/IStore/GetOrderById": {
      "post": {
        "tags": [
          "IStore"
        ],
        "description": "Find purchase order by ID For valid response try integer IDs with value &gt;= 1 and &lt;= 10.\\ \\ Other values will generated exceptions",
        "operationId": "GetOrderById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "int64",
            "description": "ID of pet that needs to be fetched"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        }
      }
    },
    "/Services/IStore/PlaceOrder": {
      "post": {
        "tags": [
          "IStore"
        ],
        "description": "Place an order for a pet",
        "operationId": "PlaceOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        }
      }
    },
    "/Services/IUser/CreateUser": {
      "post": {
        "tags": [
          "IUser"
        ],
        "description": "Create user This can only be done by the logged in user.",
        "operationId": "CreateUser",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Services/IUser/CreateUsersWithArrayInput": {
      "post": {
        "tags": [
          "IUser"
        ],
        "description": "Creates list of users with given input array",
        "operationId": "CreateUsersWithArrayInput",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Services/IUser/CreateUsersWithListInput": {
      "post": {
        "tags": [
          "IUser"
        ],
        "description": "Creates list of users with given input array",
        "operationId": "CreateUsersWithListInput",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Services/IUser/DeleteUser": {
      "post": {
        "tags": [
          "IUser"
        ],
        "description": "Delete user This can only be done by the logged in user.",
        "operationId": "DeleteUser",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The name that needs to be deleted"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Services/IUser/GetUserByName": {
      "post": {
        "tags": [
          "IUser"
        ],
        "description": "Get user by user name",
        "operationId": "GetUserByName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The name that needs to be fetched. Use user1 for testing."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/Services/IUser/LoginUser": {
      "post": {
        "tags": [
          "IUser"
        ],
        "description": "Logs user into the system",
        "operationId": "LoginUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "password",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The password for login in clear text"
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The user name for login"
          }
        ],
        "responses": {
          "200": {
            "description": "The response type",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Services/IUser/LogoutUser": {
      "post": {
        "tags": [
          "IUser"
        ],
        "description": "Logs out current logged in user session",
        "operationId": "LogoutUser",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Services/IUser/UpdateUser": {
      "post": {
        "tags": [
          "IUser"
        ],
        "description": "Updated user This can only be done by the logged in user.",
        "operationId": "UpdateUser",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "name that need to be updated"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "definitions": {
    "Pet": {
      "properties": {
        "Id": {
          "type": "number",
          "format": "int64",
          "description": ""
        },
        "Category": {
          "$ref": "#/definitions/Category"
        },
        "Name": {
          "type": "string",
          "description": ""
        },
        "PhotoUrls": {
          "type": "array",
          "description": "",
          "items": {
            "type": "string"
          }
        },
        "Tags": {
          "type": "array",
          "description": "",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "Status": {
          "type": "string",
          "description": "pet status in the store"
        }
      },
      "type": "object",
      "description": ""
    },
    "Category": {
      "properties": {
        "Id": {
          "type": "number",
          "format": "int64",
          "description": ""
        },
        "Name": {
          "type": "string",
          "description": ""
        }
      },
      "type": "object",
      "description": ""
    },
    "Tag": {
      "properties": {
        "Id": {
          "type": "number",
          "format": "int64",
          "description": ""
        },
        "Name": {
          "type": "string",
          "description": ""
        }
      },
      "type": "object",
      "description": ""
    },
    "ApiResponse": {
      "properties": {
        "Code": {
          "type": "number",
          "format": "int32",
          "description": ""
        },
        "Type": {
          "type": "string",
          "description": ""
        },
        "Message": {
          "type": "string",
          "description": ""
        }
      },
      "type": "object",
      "description": "successful operation"
    },
    "Services.Store.GetInventory.Response200": {
      "type": "object",
      "description": "successful operation"
    },
    "Order": {
      "properties": {
        "Id": {
          "type": "number",
          "format": "int64",
          "description": ""
        },
        "PetId": {
          "type": "number",
          "format": "int64",
          "description": ""
        },
        "Quantity": {
          "type": "number",
          "format": "int32",
          "description": ""
        },
        "ShipDate": {
          "type": "string",
          "format": "date-time",
          "description": ""
        },
        "Status": {
          "type": "string",
          "description": "Order Status"
        },
        "Complete": {
          "type": "boolean",
          "description": ""
        }
      },
      "type": "object",
      "description": "successful operation"
    },
    "User": {
      "properties": {
        "Id": {
          "type": "number",
          "format": "int64",
          "description": ""
        },
        "Username": {
          "type": "string",
          "description": ""
        },
        "FirstName": {
          "type": "string",
          "description": ""
        },
        "LastName": {
          "type": "string",
          "description": ""
        },
        "Email": {
          "type": "string",
          "description": ""
        },
        "Password": {
          "type": "string",
          "description": ""
        },
        "Phone": {
          "type": "string",
          "description": ""
        },
        "UserStatus": {
          "type": "number",
          "format": "int32",
          "description": "User Status"
        }
      },
      "type": "object",
      "description": ""
    }
  },
  "tags": [
    {
      "name": "IPet",
      "description": "Everything about your Pets"
    },
    {
      "name": "IStore",
      "description": "Access to Petstore orders"
    },
    {
      "name": "IUser",
      "description": "Operations about user"
    }
  ]
}