<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SolidRpc.OpenApi.AzFunctions</name>
    </assembly>
    <members>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Bindings.SolidRpcServiceCollectionAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Bindings.SolidRpcServiceCollectionAttribute.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Uses all the registered types to configure the services.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Bindings.SolidRpcServiceCollectionAttribute.#ctor(System.Type)">
            <summary>
            Constructs a new instance
            </summary>
            <param name="serviceConfig"></param>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.FunctionDef">
            <summary>
            Represents a function
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.FunctionDef.CreateFunctionName(System.String,System.String)">
            <summary>
            Creates a safe name for supplied function
            </summary>
            <param name="protocol"></param>
            <param name="functionName"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.FunctionDef.#ctor(SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler,System.String,System.String,System.String)">
            <summary>
            Constructs a new instance
            </summary>
            <param name="functionHandler"></param>
            <param name="protocol"></param>
            <param name="openApiPath"></param>
            <param name="path"></param>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.FunctionDef.FunctionHandler">
            <summary>
            The function handler
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.FunctionDef.Protocol">
            <summary>
            The protocol
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.FunctionDef.Path">
            <summary>
            The path
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.FunctionDef.PathWithArgNames">
            <summary>
            The path with arg names
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.FunctionDef.FunctionName">
            <summary>
            The function name
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.HttpFunctionDef">
            <summary>
            Represents a http function
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.HttpFunctionDef.#ctor(SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler,System.String,System.String,System.String)">
            <summary>
            Constructs a new instance
            </summary>
            <param name="functionHandler"></param>
            <param name="protocol"></param>
            <param name="openApiPath"></param>
            <param name="path"></param>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.HttpFunctionDef.Method">
            <summary>
            The metod
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.HttpFunctionDef.AuthLevel">
            <summary>
            The auth level
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.QueueFunctionDef">
            <summary>
            represents a queue function
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.QueueFunctionDef.#ctor(SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler,System.String,System.String,System.String)">
            <summary>
            Constructs a new instance
            </summary>
            <param name="functionHandler"></param>
            <param name="protocol"></param>
            <param name="openApiPath"></param>
            <param name="path"></param>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.QueueFunctionDef.QueueName">
            <summary>
            The queue name
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.QueueFunctionDef.Connection">
            <summary>
            The connection
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.QueueFunctionDef.TransportType">
            <summary>
            The transport type
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunction">
            <summary>
            Represents an azure function
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunction.Name">
            <summary>
            The name of the function.
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunction.GeneratedBy">
            <summary>
            Returns the generated by tag.
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunction.FunctionJson">
            <summary>
            handles the function.json file
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunction.Delete">
            <summary>
            Removes this function.
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunction.Save">
            <summary>
            Writes the run.csx and function.json files
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler">
            <summary>
            The function handler handles the functions in the application
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler.GetFunctions">
            <summary>
            Returns the functions
            </summary>
            <returns></returns>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler.HttpScheme">
            <summary>
            Returns the http scheme.
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler.HttpRouteBackendPrefix">
            <summary>
            Returns the http route prefix.
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler.CreateFunction``1(System.String)">
            <summary>
            Creates a new timer function
            </summary>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler.GetOrCreateFunction``1(System.String)">
            <summary>
            Creates a new timer function
            </summary>
            <returns></returns>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler.HttpTriggerHandler">
            <summary>
            Returns the http trigger handler.
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler.TimerTriggerHandler">
            <summary>
            Returns the timer trigger handler.
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler.QueueTriggerHandler">
            <summary>
            Returns the queue trigger handler.
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler.BaseDirs">
            <summary>
            The location of the functions app
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler.DevDir">
            <summary>
            The dev directory
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler.FunctionCode">
            <summary>
            The function code for each saved function.
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler.CreateRoute(System.String)">
            <summary>
            Creates a vaid route from supplied route. V1 &amp; V2 handles initial
            slashes differently.
            </summary>
            <param name="route"></param>
            <returns></returns>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.IAzHttpFunction">
            <summary>
            Represents a timer function
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzHttpFunction.Route">
            <summary>
            The path
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzHttpFunction.Methods">
            <summary>
            The methods
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzHttpFunction.AuthLevel">
            <summary>
            The authentication level
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.IAzQueueFunction">
            <summary>
            Represents a timer function
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzQueueFunction.QueueName">
            <summary>
            The queue name
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzQueueFunction.Connection">
            <summary>
            The connection
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.IAzSvcBusFunction">
            <summary>
            Represents a timer function
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzSvcBusFunction.QueueName">
            <summary>
            The queue name
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzSvcBusFunction.Connection">
            <summary>
            The connection
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.IAzTimerFunction">
            <summary>
            Represents a timer function
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzTimerFunction.Schedule">
            <summary>
            Handles the shhedule
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzTimerFunction.RunOnStartup">
            <summary>
            Specifies if the trigger should run on startup.
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzTimerFunction.TimerId">
            <summary>
            The timer id
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction">
            <summary>
            Base class for the functions
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction.#ctor(SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler,System.String,SolidRpc.OpenApi.AzFunctions.Functions.Model.Function)">
            <summary>
            Constructs a new instance
            </summary>
            <param name="functionHandler"></param>
            <param name="subDir"></param>
            <param name="function"></param>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction.TriggerType">
            <summary>
            The trigger type
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction.FunctionHandler">
            <summary>
            The function handler
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction.FunctionDirs">
            <summary>
            Returns all the function dirs
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction.SubDir">
            <summary>
            The function dir
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction.Name">
            <summary>
            The name of the function
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction.Function">
            <summary>
            The function
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction.TriggerBinding">
            <summary>
            The trigger binding
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction.FunctionJson">
            <summary>
            The function
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction.GeneratedBy">
            <summary>
            Returns the generated by tag.
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction.Delete">
            <summary>
            Deletes the function
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction.Save">
            <summary>
            Saves the run.csx and function.json files
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction.WriteFunctionClass">
            <summary>
            Writes the function class
            </summary>
            <returns></returns>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler">
            <summary>
            The function handler
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.#ctor(System.IO.DirectoryInfo,System.Reflection.Assembly)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="baseDir"></param>
            <param name="functionAssembly"></param>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.BaseDir">
            <summary>
            The base dir
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.DevDir">
            <summary>
            Returns the dev dir if it exists
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.FunctionCode">
            <summary>
            The code for each function
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.BaseDirs">
            <summary>
            The base directories
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.FunctionAssembly">
            <summary>
            The function assembly
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.TriggerHandlers">
            <summary>
            Contains the trigger handlers
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.GetFunctions">
            <summary>
            Create a new instance
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.HttpTriggerHandler">
            <summary>
            Returns the http trigger handler
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.TimerTriggerHandler">
            <summary>
            Returns the http trigger handler
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.QueueTriggerHandler">
            <summary>
            Returns the queue trigger handler
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.HttpScheme">
            <summary>
            Returns the http scheme
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.HttpRouteBackendPrefix">
            <summary>
            Returns the route prefix.
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.CreateFunction``1(System.String)">
            <summary>
            Creates a function
            </summary>
            <typeparam name="T"></typeparam>
            <param name="functionName"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.CreateRoute(System.String)">
            <summary>
            Creates a route
            </summary>
            <param name="route"></param>
            <returns></returns>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzHttpFunction">
            <summary>
            Implements an azure function.
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzHttpFunction.#ctor(SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler,System.String)">
            <summary>
            Constructs a new instance
            </summary>
            <param name="functionHandler"></param>
            <param name="subDir"></param>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzHttpFunction.#ctor(SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler,System.String,SolidRpc.OpenApi.AzFunctions.Functions.Model.Function)">
            <summary>
            Constructs a new instance
            </summary>
            <param name="functionHandler"></param>
            <param name="subDir"></param>
            <param name="functionJson"></param>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzHttpFunction.WriteFunctionClass">
            <summary>
            Writes the function class
            </summary>
            <returns></returns>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzHttpFunction.TriggerType">
            <summary>
            The trigger type.
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzHttpFunction.Route">
            <summary>
            The route
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzHttpFunction.Methods">
            <summary>
            The methods
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzHttpFunction.AuthLevel">
            <summary>
            The AuthLevel
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzQueueFunction">
            <summary>
            Represents a timer function
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzQueueFunction.WriteFunctionClass">
            <summary>
            Writes the function class
            </summary>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzQueueFunction.#ctor(SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler,System.String)">
            <summary>
            Constructs a new quue function.
            </summary>
            <param name="functionHandler"></param>
            <param name="subDir"></param>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzQueueFunction.#ctor(SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler,System.String,SolidRpc.OpenApi.AzFunctions.Functions.Model.Function)">
            <summary>
            Constructs a new timer function
            </summary>
            <param name="functionHandler"></param>
            <param name="subDir"></param>
            <param name="functionJson"></param>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzQueueFunction.TriggerType">
            <summary>
            The trigger type
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzQueueFunction.QueueName">
            <summary>
            The queue name
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzQueueFunction.Connection">
            <summary>
            The connection
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzSvcBusFunction">
            <summary>
            Represents a timer function
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzSvcBusFunction.WriteFunctionClass">
            <summary>
            Writes the function class
            </summary>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzSvcBusFunction.#ctor(SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler,System.String)">
            <summary>
            Constructs a new svc bus function.
            </summary>
            <param name="functionHandler"></param>
            <param name="subDir"></param>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzSvcBusFunction.#ctor(SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler,System.String,SolidRpc.OpenApi.AzFunctions.Functions.Model.Function)">
            <summary>
            Constructs a new svc bus function
            </summary>
            <param name="functionHandler"></param>
            <param name="subDir"></param>
            <param name="functionJson"></param>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzSvcBusFunction.TriggerType">
            <summary>
            The trigger type
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzSvcBusFunction.QueueName">
            <summary>
            The queue name
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzSvcBusFunction.Connection">
            <summary>
            The connection
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzTimerFunction">
            <summary>
            Represents a timer function
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzTimerFunction.WriteFunctionClass">
            <summary>
            Writes the function class
            </summary>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzTimerFunction.#ctor(SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler,System.String)">
            <summary>
            Constructs a new timer function.
            </summary>
            <param name="functionHandler"></param>
            <param name="subDir"></param>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzTimerFunction.#ctor(SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler,System.String,SolidRpc.OpenApi.AzFunctions.Functions.Model.Function)">
            <summary>
            Constructs a new timer function
            </summary>
            <param name="functionHandler"></param>
            <param name="subDir"></param>
            <param name="functionJson"></param>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzTimerFunction.TriggerType">
            <summary>
            The trigger type
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzTimerFunction.Schedule">
            <summary>
            The schedule
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzTimerFunction.RunOnStartup">
            <summary>
            Should the trigger run on startup
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzTimerFunction.TimerId">
            <summary>
            The method
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Model.AzProxies">
            <summary>
            Represents a proxies json file
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Model.AzProxies.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.AzProxies.Schema">
            <summary>
            The schema
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.AzProxies.Proxies">
            <summary>
            The schema
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Model.AzProxy">
            <summary>
            Represents a proxy in the proxies class.
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.AzProxy.MatchCondition">
            <summary>
            The match condition
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.AzProxy.BackendUri">
            <summary>
            The backend uri
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.AzProxy.ResponseOverrides">
            <summary>
            The response overrides
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Model.AzProxyMatchCondition">
            <summary>
            A proxy match condition
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.AzProxyMatchCondition.Route">
            <summary>
            The route
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.AzProxyMatchCondition.Methods">
            <summary>
            The route
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Model.Binding">
            <summary>
            Represents the bindings.
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Binding.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Binding.Direction">
            <summary>
            The direction
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Binding.Type">
            <summary>
            The binding type
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Binding.AuthLevel">
            <summary>
            The authorization level
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Binding.Methods">
            <summary>
            The methods
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Binding.Route">
            <summary>
            The methods
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Binding.Schedule">
            <summary>
            The timer shedule
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Binding.RunOnStartup">
            <summary>
            Should the trigger run on startup.
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Binding.UseMonitor">
            <summary>
            Should the trigger be monitored
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Binding.QueueName">
            <summary>
            The queue name
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Binding.Connection">
            <summary>
            The connection name
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Binding.Value">
            <summary>
            The value for the constant
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Model.Function">
            <summary>
            Represents a function.
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Function.GeneratedBy">
            <summary>
            The generator
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Function.ConfigurationSource">
            <summary>
            The source
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Function.Disabled">
            <summary>
            Is the function disabled
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Function.Bindings">
            <summary>
            The bindings
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Function.ScriptFile">
            <summary>
            The script file
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Function.EntryPoint">
            <summary>
            The script file
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftContractResolver">
            <summary>
            
            </summary>
        </member>
        <member name="F:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftContractResolver.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftContractResolver.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftContractResolver.CreateContract(System.Type)">
            <summary>
            
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftConverter`1">
            <summary>
            The json converter.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftConverter`1.#ctor">
            <summary>
            Constructs a new instance
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftConverter`1.PropertyWriters">
            <summary>
            
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftConverter`1.CanConvert(System.Type)">
            <summary>
            
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftKVEConverter`1">
            <summary>
            The json converter.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftKVEConverter`1.#ctor(System.Type)">
            <summary>
            Constructs a new instance
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftKVEConverter`1.CollectionType">
            <summary>
            The collection type.
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftKVEConverter`1.CanConvert(System.Type)">
            <summary>
            
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftKVEConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftKVEConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Services.ITimerStore">
            <summary>
            The timer store is used to invoke timers
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Services.ITimerStore.AddTimerAction(System.String,System.Func{System.IServiceProvider,System.Threading.CancellationToken,System.Threading.Tasks.Task})">
            <summary>
            Adds the timer action
            </summary>
            <param name="timerId"></param>
            <param name="action"></param>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Services.ITimerStore.GetTimerAction(System.String)">
            <summary>
            Returns the action associated with the supplied timer id
            </summary>
            <param name="timerId"></param>
            <returns></returns>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Services.SolidRpcHostAzFunctions">
            <summary>
            The setup class
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Services.SolidRpcHostAzFunctions.#ctor(Microsoft.Extensions.Logging.ILogger{SolidRpc.OpenApi.AspNetCore.Services.SolidRpcHost},System.IServiceProvider,Microsoft.Extensions.Configuration.IConfiguration,SolidRpc.Abstractions.OpenApi.Binder.IMethodBinderStore,SolidProxy.Core.Configuration.Runtime.ISolidProxyConfigurationStore,SolidRpc.Abstractions.Services.ISolidRpcContentHandler,SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler)">
            <summary>
            Constructs a new instance
            </summary>
            <param name="logger"></param>
            <param name="serviceProvider"></param>
            <param name="configuration"></param>
            <param name="methodBinderStore"></param>
            <param name="configurationStore"></param>
            <param name="contentHandler"></param>
            <param name="functionHandler"></param>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Services.SolidRpcHostAzFunctions.IsAlive(System.Threading.CancellationToken)">
            <summary>
            Perfomes the setup.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Services.TimerStore">
            <summary>
            Implements the timer store logic
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Services.TimerStore.AddTimerAction(System.String,System.Func{System.IServiceProvider,System.Threading.CancellationToken,System.Threading.Tasks.Task})">
            <summary>
            Adds a new timer to the store
            </summary>
            <param name="timerId"></param>
            <param name="action"></param>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Services.TimerStore.GetTimerAction(System.String)">
            <summary>
            Returns the actio for supplied timer
            </summary>
            <param name="timerId"></param>
            <returns></returns>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.StartupSolidRpcServices">
            <summary>
            Base class to configure the solid rpc services
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.StartupSolidRpcServices.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{SolidRpc.Abstractions.OpenApi.Proxy.ISolidRpcOpenApiConfig,System.Boolean})">
            <summary>
            Configures the services.
            </summary>
            <param name="services"></param>
            <param name="configurator"></param>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.StartupSolidRpcServices.ConfigureAzureFunction(SolidRpc.Abstractions.OpenApi.Proxy.ISolidRpcOpenApiConfig)">
            <summary>
            
            </summary>
            <param name="c"></param>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.IServiceCollectionExtensions">
            <summary>
            Extension methods fro the http request
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.IServiceCollectionExtensions.GetAzFunctionHandler(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.IServiceCollectionExtensions.AddAzFunctionStartup``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
            
            </summary>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImpl"></typeparam>
            <param name="services"></param>
            <param name="invocation"></param>
            <param name="serviceLifetime"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.IServiceCollectionExtensions.AddAzFunctionTimer``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.String,System.Boolean)">
            <summary>
            
            </summary>
            <typeparam name="TService"></typeparam>
            <param name="services"></param>
            <param name="invocation"></param>
            <param name="schedule"></param>
            <param name="runOnStartup"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.IServiceCollectionExtensions.AddAzFunctionHttp``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Linq.Expressions.Expression{System.Action{``0}},Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
            Adds an http function
            </summary>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImpl"></typeparam>
            <param name="services"></param>
            <param name="serviceLifetime"></param>
            <param name="invocation"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.IServiceCollectionExtensions.AddAzFunctionHttp``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Linq.Expressions.Expression{System.Action{``0}},System.Func{``0})">
            <summary>
            Adds an http function
            </summary>
            <typeparam name="TService"></typeparam>
            <param name="services"></param>
            <param name="invocation"></param>
            <param name="implementationFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.IServiceCollectionExtensions.AddServiceIfMissing``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
            Adds the transient service if not registered
            </summary>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImpl"></typeparam>
            <param name="services"></param>
            <param name="serviceLifetime"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.IServiceCollectionExtensions.AddServiceIfMissing``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{``0})">
            <summary>
            Adds the transient service if not registered
            </summary>
            <typeparam name="TService"></typeparam>
            <param name="services"></param>
            <param name="implementationFactory"></param>
            <returns></returns>
        </member>
    </members>
</doc>
