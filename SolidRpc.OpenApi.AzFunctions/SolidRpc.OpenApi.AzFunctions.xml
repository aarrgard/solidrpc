<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SolidRpc.OpenApi.AzFunctions</name>
    </assembly>
    <members>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Bindings.SolidRpcServiceCollectionAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Bindings.SolidRpcServiceCollectionAttribute.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Uses all the registered types to configure the services.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Bindings.SolidRpcServiceCollectionAttribute.#ctor(System.Type)">
            <summary>
            Constructs a new instance
            </summary>
            <param name="serviceConfig"></param>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunction">
            <summary>
            Represents an azure function
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunction.Name">
            <summary>
            The name of the function.
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunction.GeneratedBy">
            <summary>
            Returns the generated by tag.
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunction.FunctionJson">
            <summary>
            handles the function.json file
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunction.Delete">
            <summary>
            Removes this function.
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunction.Save(System.Boolean)">
            <summary>
            Writes the run.csx and function.json files
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler">
            <summary>
            The function handler handles the functions in the application
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler.Functions">
            <summary>
            Returns the functions
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler.HttpRoutePrefix">
            <summary>
            Returns the http route prefix.
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler.CreateTimerFunction(System.String)">
            <summary>
            Creates a new timer function
            </summary>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler.CreateHttpFunction(System.String)">
            <summary>
            Creates a http function
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler.TriggerRestart">
            <summary>
            Triggers a restart by writing some additional data to 
            the end of a config file
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler.SyncProxiesFile">
            <summary>
            Puts all the functions in the proxies file.
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler.HttpTriggerHandler">
            <summary>
            Returns the http trigger handler.
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler.TimerTriggerHandler">
            <summary>
            Returns the timer trigger handler.
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.IAzHttpFunction">
            <summary>
            Represents a timer function
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzHttpFunction.Route">
            <summary>
            The path
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzHttpFunction.Methods">
            <summary>
            The methods
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzHttpFunction.AuthLevel">
            <summary>
            The authentication level
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.IAzTimerFunction">
            <summary>
            Represents a timer function
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzTimerFunction.Schedule">
            <summary>
            Handles the shhedule
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzTimerFunction.RunOnStartup">
            <summary>
            Specifies if the trigger should run on startup.
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzTimerFunction.ServiceType">
            <summary>
            The service type to resolve
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.IAzTimerFunction.MethodName">
            <summary>
            The method to invoke on the service
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction">
            <summary>
            Base class for the functions
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction.#ctor(System.IO.DirectoryInfo,SolidRpc.OpenApi.AzFunctions.Functions.Model.Function)">
            <summary>
            Constructs a new instance
            </summary>
            <param name="directory"></param>
            <param name="function"></param>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction.Directory">
            <summary>
            The directory where the function resides
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction.TriggerType">
            <summary>
            The trigger type
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction.Name">
            <summary>
            The name of the function
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction.Function">
            <summary>
            The function
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction.TriggerBinding">
            <summary>
            The trigger binding
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction.FunctionJson">
            <summary>
            The function
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction.GeneratedBy">
            <summary>
            Returns the generated by tag.
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction.Delete">
            <summary>
            Deletes the function
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunction.Save(System.Boolean)">
            <summary>
            Saves the run.csx and function.json files
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler">
            <summary>
            The function handler
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.#ctor(System.IO.DirectoryInfo,System.Reflection.Assembly)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="baseDir"></param>
            <param name="functionAssembly"></param>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.BaseDir">
            <summary>
            The base dir
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.FunctionAssembly">
            <summary>
            The function assembly
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.TriggerHandlers">
            <summary>
            Contains the trigger handlers
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.Functions">
            <summary>
            Create a new instance
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.HttpTriggerHandler">
            <summary>
            Returns the http trigger handler
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.TimerTriggerHandler">
            <summary>
            Returns the http trigger handler
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.HttpRoutePrefix">
            <summary>
            Returns the route prefix.
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.CreateTimerFunction(System.String)">
            <summary>
            Creates a timer function
            </summary>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.CreateHttpFunction(System.String)">
            <summary>
            Creates a http function
            </summary>
            <param name="functionName"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.TriggerRestart">
            <summary>
            triggers a restart of the application
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzFunctionHandler.SyncProxiesFile">
            <summary>
            Syncronizes the proxies file with the functions.
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzHttpFunction">
            <summary>
            Implements an azure function.
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzHttpFunction.#ctor(SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler,System.IO.DirectoryInfo)">
            <summary>
            Constructs a new instance
            </summary>
            <param name="functionHandler"></param>
            <param name="dir"></param>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzHttpFunction.#ctor(System.IO.DirectoryInfo,SolidRpc.OpenApi.AzFunctions.Functions.Model.Function)">
            <summary>
            Constructs a new instance
            </summary>
            <param name="dir"></param>
            <param name="functionJson"></param>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzHttpFunction.TriggerType">
            <summary>
            The trigger type.
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzHttpFunction.Route">
            <summary>
            The route
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzHttpFunction.Methods">
            <summary>
            The methods
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzHttpFunction.AuthLevel">
            <summary>
            The AuthLevel
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzTimerFunction">
            <summary>
            Represents a timer function
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzTimerFunction.#ctor(SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler,System.IO.DirectoryInfo)">
            <summary>
            Constructs a new timer function.
            </summary>
            <param name="functionHandler"></param>
            <param name="functionDir"></param>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzTimerFunction.#ctor(System.IO.DirectoryInfo,SolidRpc.OpenApi.AzFunctions.Functions.Model.Function)">
            <summary>
            Constructs a new timer function
            </summary>
            <param name="functionDir"></param>
            <param name="functionJson"></param>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzTimerFunction.TriggerType">
            <summary>
            The trigger type
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzTimerFunction.Schedule">
            <summary>
            The schedule
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzTimerFunction.RunOnStartup">
            <summary>
            Should the trigger run on startup
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzTimerFunction.ServiceType">
            <summary>
            The service type
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Impl.AzTimerFunction.MethodName">
            <summary>
            The method
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Model.AzProxies">
            <summary>
            Represents a proxies json file
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Model.AzProxies.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.AzProxies.Schema">
            <summary>
            The schema
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.AzProxies.Proxies">
            <summary>
            The schema
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Model.AzProxy">
            <summary>
            Represents a proxy in the proxies class.
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.AzProxy.MatchCondition">
            <summary>
            The match condition
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.AzProxy.BackendUri">
            <summary>
            The backend uri
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Model.AzProxyMatchCondition">
            <summary>
            A proxy match condition
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.AzProxyMatchCondition.Route">
            <summary>
            The route
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.AzProxyMatchCondition.Methods">
            <summary>
            The route
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Model.Binding">
            <summary>
            Represents the bindings.
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Binding.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Binding.Direction">
            <summary>
            The direction
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Binding.Type">
            <summary>
            The binding type
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Binding.AuthLevel">
            <summary>
            The authorization level
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Binding.Methods">
            <summary>
            The methods
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Binding.Route">
            <summary>
            The methods
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Binding.Schedule">
            <summary>
            The timer shedule
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Binding.RunOnStartup">
            <summary>
            Should the trigger run on startup.
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Binding.Value">
            <summary>
            The value for the constant
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Model.Function">
            <summary>
            Represents a function.
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Function.GeneratedBy">
            <summary>
            The generator
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Function.ConfigurationSource">
            <summary>
            The source
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Function.Disabled">
            <summary>
            Is the function disabled
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Function.Bindings">
            <summary>
            The bindings
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Function.ScriptFile">
            <summary>
            The script file
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.Function.EntryPoint">
            <summary>
            The script file
            </summary>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftContractResolver">
            <summary>
            
            </summary>
        </member>
        <member name="F:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftContractResolver.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftContractResolver.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftContractResolver.CreateContract(System.Type)">
            <summary>
            
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftConverter`1">
            <summary>
            The json converter.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftConverter`1.#ctor">
            <summary>
            Constructs a new instance
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftConverter`1.PropertyWriters">
            <summary>
            
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftConverter`1.CanConvert(System.Type)">
            <summary>
            
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Functions.Model.NewtonsoftConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Services.ISolidRpcHost">
            <summary>
            Interface that is used to setup the solid rpc infrastructure
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Services.ISolidRpcHost.CheckConfig(System.String,System.Threading.CancellationToken)">
            <summary>
            Performes the initialization work
            </summary>
            <param name="configurationHash"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:SolidRpc.OpenApi.AzFunctions.Services.SolidRpcHost">
            <summary>
            The setup class
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Services.SolidRpcHost.#ctor(Microsoft.Extensions.Logging.ILogger{SolidRpc.OpenApi.AzFunctions.Services.SolidRpcHost},SolidRpc.Abstractions.OpenApi.Binder.IMethodBinderStore,SolidRpc.OpenApi.AzFunctions.Functions.IAzFunctionHandler)">
            <summary>
            Constructs a new instance
            </summary>
            <param name="logger"></param>
            <param name="methodBinderStore"></param>
            <param name="functionHandler"></param>
            <param name="contentTypeProvider"></param>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Services.SolidRpcHost.MethodBinderStore">
            <summary>
            The config store
            </summary>
        </member>
        <member name="P:SolidRpc.OpenApi.AzFunctions.Services.SolidRpcHost.FunctionHandler">
            <summary>
            The function handler
            </summary>
        </member>
        <member name="M:SolidRpc.OpenApi.AzFunctions.Services.SolidRpcHost.CheckConfig(System.String,System.Threading.CancellationToken)">
            <summary>
            Perfomes the setup.
            </summary>
            <param name="configurationHash"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:SolidRpc.Test.Petstore.AzFunctions.StartupSolidRpcServices">
            <summary>
            Base class to configure the soldi rpc services
            </summary>
        </member>
        <member name="M:SolidRpc.Test.Petstore.AzFunctions.StartupSolidRpcServices.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configures the services.
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:SolidRpc.Test.Petstore.AzFunctions.TraceWriterLoggerProvider">
            <summary>
            Implements logic so that the trace writer output is redirected to the logger.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.IServiceCollectionExtensions">
            <summary>
            Extension methods fro the http request
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.IServiceCollectionExtensions.GetAzFunctionHandler(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.IServiceCollectionExtensions.AddAzFunctionStartup``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Linq.Expressions.Expression{System.Action{``0}},Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
            
            </summary>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImpl"></typeparam>
            <param name="services"></param>
            <param name="invocation"></param>
            <param name="serviceLifetime"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.IServiceCollectionExtensions.AddAzFunctionHttp``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Linq.Expressions.Expression{System.Action{``0}},Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
            Adds an http function
            </summary>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImpl"></typeparam>
            <param name="services"></param>
            <param name="serviceLifetime"></param>
            <param name="invocation"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.IServiceCollectionExtensions.AddServiceIfMissing``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
            Adds the transient service if not registered
            </summary>
            <typeparam name="TService"></typeparam>
            <typeparam name="TImpl"></typeparam>
            <param name="services"></param>
            <param name="serviceLifetime"></param>
            <returns></returns>
        </member>
    </members>
</doc>
