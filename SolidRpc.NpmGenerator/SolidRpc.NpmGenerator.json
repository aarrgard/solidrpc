{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Npm generator",
    "description": "Api for generating npm modules"
  },
  "basePath": "/SolidRpc/NpmGenerator",
  "tags": [
    {
      "name": "NpmGenerator",
      "description": "The npm generator"
    }
  ],
  "paths": {
    "/CreateCodeNamespace": {
      "get": {
        "tags": [ "NpmGenerator" ],
        "operationId": "CreateCodeNamespace",
        "description": "Creates a representation of the code namespace of supplied assembly",
        "parameters": [
          {
            "in": "path",
            "name": "assemblyName",
            "description": "The name of the assembly to create the namespace stuff for.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CodeNamespace"
            }
          }
        }
      }
    },
    "/CreateTypesTs": {
      "get": {
        "tags": [ "NpmGenerator" ],
        "operationId": "CreateTypesTs",
        "description": "Creates types.ts file from the code namespace structure.",
        "parameters": [
          {
            "in": "path",
            "name": "assemblyName",
            "description": "The name of the assembly to create the types.ts file for.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/CreateNpmPackage": {
      "get": {
        "tags": [ "NpmGenerator" ],
        "operationId": "CreateNpmPackage",
        "parameters": [
          {
            "in": "path",
            "name": "assemblyName",
            "description": "The name of the assembly to create an npm package for.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NpmPackage"
            }
          }
        }

      }
    },
    "/RunNpm": {
      "post": {
        "tags": [ "NpmGenerator" ],
        "operationId": "RunNpm",
        "parameters": [
          {
            "in": "path",
            "name": "command",
            "description": "The npm command to run",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": " npmPackage",
            "description": "The npm package to compile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NpmPackage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NpmPackage"
            }
          }
        }
      }
    },
    "/CreateNpm": {
      "get": {
        "tags": [ "NpmGenerator" ],
        "operationId": "CreateNpm",
        "parameters": [
          {
            "in": "path",
            "name": "assemblyName",
            "description": "The name of the assembly to create an npm package for.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FileContent"
            }
          }
        }

      }
    }
  },
  "definitions": {
    "FileContent": {
      "description": "Represents a file content",
      "type": "object",
      "properties": {
        "content": {
          "description": "The binary file content",
          "type": "string",
          "format": "binary"
        },
        "contentType": {
          "description": "The content type",
          "type": "string"
        },
        "fileName": {
          "description": "The file name",
          "type": "string"
        }
      }
    },
    "NpmPackage": {
      "description": "Represents a NPM package with some files",
      "type": "object",
      "properties": {
        "files": {
          "description": "The files within the package",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NpmPackageFile"
          }
        }
      }
    },
    "NpmPackageFile": {
      "description": "Represents a file within a NPM package",
      "type": "object",
      "properties": {
        "filePath": {
          "description": "The file path within the package",
          "type": "string"
        },
        "content": {
          "description": "The file content(binary content not supported)",
          "type": "string"
        }
      }
    },
    "CodeNamespace": {
      "description": "Represents a namespace.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of this namespace part(not fully qualified).",
          "type": "string"
        },
        "namespaces": {
          "description": "The namespaces within this namespace",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeNamespace"
          }
        },
        "interfaces": {
          "description": "The interfaces within this namespace",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeInterface"
          }
        },
        "types": {
          "description": "The types within this namespace",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeType"
          }
        }
      }
    },
    "CodeInterface": {
      "description": "Represents a code interface.",
      "type": "object",
      "properties": {
        "description": {
          "description": "The description of this interface",
          "type": "string"
        },
        "name": {
          "description": "The name of this interface",
          "type": "string"
        },
        "methods": {
          "description": "The methods in the interface",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeMethod"
          }
        }
      }
    },
    "CodeMethod": {
      "description": "Represents a code method.",
      "type": "object",
      "properties": {
        "description": {
          "description": "A description of the the method",
          "type": "string"
        },
        "name": {
          "description": "The name of this method",
          "type": "string"
        },
        "arguments": {
          "description": "The method arguments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeMethodArg"
          }
        },
        "returnType": {
          "description": "The return type of the method(fully qualified)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "httpMethod": {
          "description": "The http method(GET,POST,etc.)",
          "type": "string"
        },
        "httpBaseAddress": {
          "description": "The base address to this method",
          "type": "string",
          "format": "uri"
        },
        "httpPath": {
          "description": "The http path relative to the base address",
          "type": "string"
        }
      }
    },
    "CodeMethodArg": {
      "description": "Represents a method argument.",
      "type": "object",
      "properties": {
        "description": {
          "description": "A description of the the argument",
          "type": "string"
        },
        "name": {
          "description": "The name of the argument",
          "type": "string"
        },
        "argType": {
          "description": "The argument type(fully qualified)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "optional": {
          "description": "Specifies if this argument is optional(not required)",
          "type": "boolean"
        },
        "httpName": {
          "description": "The name of the argument in the http protocol.",
          "type": "string"
        },
        "httpLocation": {
          "description": "The location of the argument('path', 'query', 'header', 'body', 'body-inline')",
          "type": "string"
        }
      }
    },
    "CodeType": {
      "description": "Represents a code type.",
      "type": "object",
      "properties": {
        "description": {
          "description": "A description of the the type",
          "type": "string"
        },
        "name": {
          "description": "The name of the type",
          "type": "string"
        },
        "properties": {
          "description": "The method arguments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeTypeProperty"
          }
        }
      }
    },
    "CodeTypeProperty": {
      "description": "Represents a code type property.",
      "type": "object",
      "properties": {
        "description": {
          "description": "A description of the the property",
          "type": "string"
        },
        "name": {
          "description": "The name of the property",
          "type": "string"
        },
        "propertyType": {
          "description": "The property type(fully qualified)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "httpName": {
          "description": "The name of the property in the http protocol.",
          "type": "string"
        }
      }
    }
  }
}
