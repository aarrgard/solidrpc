<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SolidRpc.NpmGenerator</name>
    </assembly>
    <members>
        <member name="T:SolidRpc.NpmGenerator.Debugger.Events.Debugger.Paused">
            <summary>
            
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Debugger.Events.Debugger.Paused.Reason">
            <summary>
            Pause reason.
            Allowed Values: ambiguous, assert, debugCommand, DOM, EventListener, exception, instrumentation, OOM, other, promiseRejection, XHR
            </summary>
        </member>
        <member name="T:SolidRpc.NpmGenerator.Debugger.Events.Debugger.ScriptParsed">
            <summary>
            Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Debugger.Events.Debugger.ScriptParsed.ScriptId">
            <summary>
            Identifier of the script parsed.
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Debugger.Events.Debugger.ScriptParsed.Url">
            <summary>
            URL or name of the script parsed (if any).
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Debugger.Events.Debugger.ScriptParsed.StartLine">
            <summary>
            Line offset of the script within the resource with given URL (for script tags).
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Debugger.Events.Debugger.ScriptParsed.StartColumn">
            <summary>
            Column offset of the script within the resource with given URL.
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Debugger.Events.Debugger.ScriptParsed.EndLine">
            <summary>
            Last line of the script.
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Debugger.Events.Debugger.ScriptParsed.EndColumn">
            <summary>
            Length of the last line of the script.
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Debugger.Events.Debugger.ScriptParsed.ExecutionContextId">
            <summary>
            Specifies script creation context.
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Debugger.Events.Debugger.ScriptParsed.Hash">
            <summary>
            Content hash of the script.
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Debugger.Events.Debugger.ScriptParsed.executionContextAuxData">
            <summary>
            Embedder-specific auxiliary data.
            </summary>
        </member>
        <member name="T:SolidRpc.NpmGenerator.Debugger.Events.Runtime.ExecutionContextCreated">
            <summary>
            Represents an execution context created event
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Debugger.Events.Runtime.ExecutionContextCreated.ExecutionContextDescription.Id">
            <summary>
            Unique id of the execution context. It can be used to specify in which execution context script evaluation should be performed.
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Debugger.Events.Runtime.ExecutionContextCreated.ExecutionContextDescription.Origin">
            <summary>
            Execution context origin.
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Debugger.Events.Runtime.ExecutionContextCreated.ExecutionContextDescription.Name">
            <summary>
            Human readable name describing given context.
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Debugger.Events.Runtime.ExecutionContextCreated.ExecutionContextDescription.AuxData">
            <summary>
            Unique id of the execution context. It can be used to specify in which execution context script evaluation should be performed.
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Debugger.Events.Runtime.ExecutionContextCreated.Context">
            <summary>
            A newly created execution contex.
            </summary>
        </member>
        <member name="T:SolidRpc.NpmGenerator.Debugger.NodeDebugger">
            <summary>
            The debugger for the node service
            </summary>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Debugger.NodeDebugger.#ctor(System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new instance
            </summary>
            <param name="host"></param>
            <param name="port"></param>
            <param name="uid"></param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Debugger.NodeDebugger.Connect">
            <summary>
            Connects the debugger
            </summary>
        </member>
        <member name="T:SolidRpc.NpmGenerator.InternalServices.CodeNamespaceGenerator">
            <summary>
            Creates code namespaces from the reggistered bindings.
            </summary>
        </member>
        <member name="M:SolidRpc.NpmGenerator.InternalServices.CodeNamespaceGenerator.#ctor(SolidRpc.Abstractions.OpenApi.Binder.IMethodBinderStore,SolidRpc.OpenApi.Model.CodeDoc.ICodeDocRepository)">
            <summary>
            Creates an instance
            </summary>
            <param name="methodBinderStore"></param>
            <param name="codeDocRepository"></param>
        </member>
        <member name="M:SolidRpc.NpmGenerator.InternalServices.CodeNamespaceGenerator.CreateCodeNamespace(System.String)">
            <summary>
            Creates code for an assembly
            </summary>
            <param name="assemblyName"></param>
            <returns></returns>
        </member>
        <member name="T:SolidRpc.NpmGenerator.InternalServices.ICodeNamespaceGenerator">
            <summary>
            instance responsible for generating code structures
            </summary>
        </member>
        <member name="M:SolidRpc.NpmGenerator.InternalServices.ICodeNamespaceGenerator.CreateCodeNamespace(System.String)">
            <summary>
            Creates a code namespace for supplied assembly name
            </summary>
            <param name="assemblyName"></param>
            <returns></returns>
        </member>
        <member name="T:SolidRpc.NpmGenerator.InternalServices.ITypescriptGenerator">
            <summary>
            instance responsible for generating code structures
            </summary>
        </member>
        <member name="M:SolidRpc.NpmGenerator.InternalServices.ITypescriptGenerator.CreateTypesTs(SolidRpc.NpmGenerator.Types.CodeNamespace)">
            <summary>
            Creates a types.ts file from supplied 
            </summary>
            <param name="codeNamespace"></param>
            <returns></returns>
        </member>
        <member name="T:SolidRpc.NpmGenerator.InternalServices.TypeScriptGenerator">
            <summary>
            Creates typescript code from supplied code namespace.
            </summary>
        </member>
        <member name="M:SolidRpc.NpmGenerator.InternalServices.TypeScriptGenerator.CreateTypesTs(SolidRpc.NpmGenerator.Types.CodeNamespace)">
            <summary>
            Creates a types.ts file
            </summary>
            <param name="rootNamespace"></param>
            <returns></returns>
        </member>
        <member name="T:SolidRpc.NpmGenerator.Services.INodeService">
            <summary>
            The node service
            </summary>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.INodeService.ExecuteJSInDebugger(System.String,System.Threading.CancellationToken)">
            <summary>
            Runs the supplied javascript.
            </summary>
            <param name="js"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.INodeService.ExecuteJSAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Runs the supplied javascript.
            </summary>
            <param name="js"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.INodeService.GetNodeVersionAsync(System.Threading.CancellationToken)">
            <summary>
            Returns the node version
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.INodeService.DownloadPackageAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Downloads the specified package so that it is available to the executed scripts.
            </summary>
            <param name="package"></param>
            <param name="version"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:SolidRpc.NpmGenerator.Services.INpmGenerator">
            <summary>
            The npm generator
            </summary>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.INpmGenerator.CreateCodeNamespace(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a representation of the code namespace of supplied assembly
            </summary>
            <param name="assemblyName">The name of the assembly to create the namespace stuff for.</param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.INpmGenerator.CreateTypesTs(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates types.ts file from the code namespace structure.
            </summary>
            <param name="assemblyName">The name of the assembly to create the types.ts file for.</param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.INpmGenerator.CreateNpmPackage(System.String,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="assemblyName">The name of the assembly to create an npm package for.</param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.INpmGenerator.RunNpm(System.String,SolidRpc.NpmGenerator.Types.NpmPackage,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="command">The npm command to run</param>
            <param name="npmPackage">The npm package to compile</param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.INpmGenerator.CreateNpm(System.String,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="assemblyName">The name of the assembly to create an npm package for.</param>
            <param name="cancellationToken"></param>
        </member>
        <member name="T:SolidRpc.NpmGenerator.Services.NodeService">
            <summary>
            Implements the node service. Executables are fetched from https://nodejs.org/es/blog/release/v8.17.0/.
            </summary>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.NodeService.#ctor(Microsoft.Extensions.Logging.ILogger{SolidRpc.NpmGenerator.Services.NodeService})">
            <summary>
            Constructs the instance
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.NodeService.ExecuteJSAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the supplied js
            </summary>
            <param name="js"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:SolidRpc.NpmGenerator.Services.NpmGenerator">
            <summary>
            The npm generator implementation.
            </summary>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.NpmGenerator.#ctor(Microsoft.Extensions.Logging.ILogger{SolidRpc.NpmGenerator.Services.NpmGenerator},System.Net.Http.IHttpClientFactory,SolidRpc.Abstractions.OpenApi.Binder.IMethodBinderStore,SolidRpc.NpmGenerator.InternalServices.ICodeNamespaceGenerator,SolidRpc.NpmGenerator.InternalServices.ITypescriptGenerator,SolidRpc.Abstractions.OpenApi.Invoker.IInvoker{SolidRpc.NpmGenerator.Services.INpmGenerator},System.IServiceProvider)">
            <summary>
            Constructs a new instance
            </summary>
            <param name="logger"></param>
            <param name="httpClientFactory"></param>
            <param name="methodBinderStore"></param>
            <param name="codeNamespaceGenerator"></param>
            <param name="typescriptGenerator"></param>
            <param name="invoker"></param>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.NpmGenerator.CreateNpm(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates the npm tar
            </summary>
            <param name="assemblyName"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.NpmGenerator.CreateNpmPackage(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates an npm package.
            </summary>
            <param name="assemblyName"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.NpmGenerator.RunNpm(System.String,SolidRpc.NpmGenerator.Types.NpmPackage,System.Threading.CancellationToken)">
            <summary>
            Runs the supplied npm command on the supplied npm package
            </summary>
            <param name="npmCommmand"></param>
            <param name="npmPackage"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.NpmGenerator.CheckCachedModuleDir(System.IO.DirectoryInfo)">
            <summary>
            Returns true if all the files exists(temp dir might get corrupted).
            </summary>
            <param name="cachedModuleDir"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.NpmGenerator.CreateCodeNamespace(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a code representation for supplied assembly
            </summary>
            <param name="assemblyName"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.NpmGenerator.CreateTypesTs(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates the types.ts file for supplied assembly
            </summary>
            <param name="assemblyName"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:SolidRpc.NpmGenerator.Types.CodeInterface">
            <summary>
            
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeInterface.Description">
            <summary>
            The description of this interface
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeInterface.Name">
            <summary>
            The name of this interface
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeInterface.Methods">
            <summary>
            The methods in the interface
            </summary>
        </member>
        <member name="T:SolidRpc.NpmGenerator.Types.CodeMethod">
            <summary>
            
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeMethod.Description">
            <summary>
            A description of the the method
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeMethod.Name">
            <summary>
            The name of this method
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeMethod.Arguments">
            <summary>
            The method arguments
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeMethod.ReturnType">
            <summary>
            The return type of the method(fully qualified)
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeMethod.HttpMethod">
            <summary>
            The http method(GET,POST,etc.)
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeMethod.HttpBaseAddress">
            <summary>
            The base address to this method
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeMethod.HttpPath">
            <summary>
            The http path relative to the base address
            </summary>
        </member>
        <member name="T:SolidRpc.NpmGenerator.Types.CodeMethodArg">
            <summary>
            
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeMethodArg.Description">
            <summary>
            A description of the the argument
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeMethodArg.Name">
            <summary>
            The name of the argument
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeMethodArg.ArgType">
            <summary>
            The argument type(fully qualified)
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeMethodArg.Optional">
            <summary>
            Specifies if this argument is optional(not required)
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeMethodArg.HttpName">
            <summary>
            The name of the argument in the http protocol.
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeMethodArg.HttpLocation">
            <summary>
            The location of the argument(&#39;path&#39;, &#39;query&#39;, &#39;header&#39;, &#39;body&#39;, &#39;body-inline&#39;)
            </summary>
        </member>
        <member name="T:SolidRpc.NpmGenerator.Types.CodeNamespace">
            <summary>
            successful operation
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeNamespace.Name">
            <summary>
            The name of this namespace part(not fully qualified).
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeNamespace.Namespaces">
            <summary>
            The namespaces within this namespace
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeNamespace.Interfaces">
            <summary>
            The interfaces within this namespace
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeNamespace.Types">
            <summary>
            The types within this namespace
            </summary>
        </member>
        <member name="T:SolidRpc.NpmGenerator.Types.CodeType">
            <summary>
            
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeType.Description">
            <summary>
            A description of the the type
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeType.Name">
            <summary>
            The name of the type
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeType.Properties">
            <summary>
            The method arguments
            </summary>
        </member>
        <member name="T:SolidRpc.NpmGenerator.Types.CodeTypeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeTypeProperty.Description">
            <summary>
            A description of the the property
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeTypeProperty.Name">
            <summary>
            The name of the property
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeTypeProperty.PropertyType">
            <summary>
            The property type(fully qualified)
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.CodeTypeProperty.HttpName">
            <summary>
            The name of the property in the http protocol.
            </summary>
        </member>
        <member name="T:SolidRpc.NpmGenerator.Types.FileContent">
            <summary>
            successful operation
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.FileContent.Content">
            <summary>
            The binary file content
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.FileContent.ContentType">
            <summary>
            The content type
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.FileContent.FileName">
            <summary>
            The file name
            </summary>
        </member>
        <member name="T:SolidRpc.NpmGenerator.Types.NodeExecution">
            <summary>
            Represents the result from a node execution.
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.NodeExecution.ExitCode">
            <summary>
            The exit code. Null means that the process is still running.
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.NodeExecution.Out">
            <summary>
            The result from the std.out.
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.NodeExecution.Err">
            <summary>
            The result from the std.err.
            </summary>
        </member>
        <member name="T:SolidRpc.NpmGenerator.Types.NpmPackage">
            <summary>
            successful operation
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.NpmPackage.Files">
            <summary>
            The files within the package
            </summary>
        </member>
        <member name="T:SolidRpc.NpmGenerator.Types.NpmPackageFile">
            <summary>
            
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.NpmPackageFile.FilePath">
            <summary>
            The file path within the package
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.NpmPackageFile.Content">
            <summary>
            The file content(binary content not supported)
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.IServiceCollectionExtensions">
            <summary>
            Extension methods or the service collections
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.IServiceCollectionExtensions.AddSolidRpcNpmGenerator(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{SolidRpc.Abstractions.OpenApi.Proxy.ISolidRpcOpenApiConfig,System.Boolean})">
            <summary>
            Adds the npm generator.
            </summary>
            <param name="services"></param>
            <param name="configurator"></param>
            <returns></returns>
        </member>
    </members>
</doc>
