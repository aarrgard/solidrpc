<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SolidRpc.NpmGenerator</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Extensions.DependencyInjection.IServiceCollectionExtensions">
            <summary>
            Extension methods or the service collections
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.IServiceCollectionExtensions.AddSolidRpcNpmGenerator(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{SolidRpc.Abstractions.OpenApi.Proxy.ISolidRpcOpenApiConfig,System.Boolean})">
            <summary>
            Adds the npm generator.
            </summary>
            <param name="services"></param>
            <param name="configurator"></param>
            <returns></returns>
        </member>
        <member name="T:SolidRpc.NpmGenerator.Services.INpmGenerator">
            <summary>
            The npm generator
            </summary>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.INpmGenerator.CreateTypesTs(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates types.ts file from the code namespace structure.
            </summary>
            <param name="assemblyName">The name of the assembly to create the types.ts file for.</param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.INpmGenerator.CreateNpmPackage(System.String,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="assemblyName">The name of the assembly to create an npm package for.</param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.INpmGenerator.RunNpm(System.String,SolidRpc.NpmGenerator.Types.NpmPackage,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="command">The npm command to run</param>
            <param name="npmPackage">The npm package to compile</param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.INpmGenerator.CreateNpm(System.String,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="assemblyName">The name of the assembly to create an npm package for.</param>
            <param name="cancellationToken"></param>
        </member>
        <member name="T:SolidRpc.NpmGenerator.Services.NpmGenerator">
            <summary>
            The npm generator implementation.
            </summary>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.NpmGenerator.#ctor(Microsoft.Extensions.Logging.ILogger{SolidRpc.NpmGenerator.Services.NpmGenerator},System.Net.Http.IHttpClientFactory,SolidRpc.Abstractions.OpenApi.Binder.IMethodBinderStore,SolidRpc.Abstractions.Services.Code.ICodeNamespaceGenerator,SolidRpc.Abstractions.Services.Code.ITypescriptGenerator,SolidRpc.Abstractions.OpenApi.Invoker.IInvoker{SolidRpc.NpmGenerator.Services.INpmGenerator},System.IServiceProvider)">
            <summary>
            Constructs a new instance
            </summary>
            <param name="logger"></param>
            <param name="httpClientFactory"></param>
            <param name="methodBinderStore"></param>
            <param name="codeNamespaceGenerator"></param>
            <param name="typescriptGenerator"></param>
            <param name="invoker"></param>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.NpmGenerator.CreateNpm(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates the npm tar
            </summary>
            <param name="assemblyName"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.NpmGenerator.CreateNpmPackage(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates an npm package.
            </summary>
            <param name="assemblyName"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.NpmGenerator.RunNpm(System.String,SolidRpc.NpmGenerator.Types.NpmPackage,System.Threading.CancellationToken)">
            <summary>
            Runs the supplied npm command on the supplied npm package
            </summary>
            <param name="npmCommmand"></param>
            <param name="npmPackage"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.NpmGenerator.CheckCachedModuleDir(System.IO.DirectoryInfo)">
            <summary>
            Returns true if all the files exists(temp dir might get corrupted).
            </summary>
            <param name="cachedModuleDir"></param>
            <returns></returns>
        </member>
        <member name="M:SolidRpc.NpmGenerator.Services.NpmGenerator.CreateTypesTs(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates the types.ts file for supplied assembly
            </summary>
            <param name="assemblyName"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:SolidRpc.NpmGenerator.Types.FileContent">
            <summary>
            successful operation
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.FileContent.Content">
            <summary>
            The binary file content
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.FileContent.ContentType">
            <summary>
            The content type
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.FileContent.FileName">
            <summary>
            The file name
            </summary>
        </member>
        <member name="T:SolidRpc.NpmGenerator.Types.NpmPackage">
            <summary>
            successful operation
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.NpmPackage.Files">
            <summary>
            The files within the package
            </summary>
        </member>
        <member name="T:SolidRpc.NpmGenerator.Types.NpmPackageFile">
            <summary>
            
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.NpmPackageFile.FilePath">
            <summary>
            The file path within the package
            </summary>
        </member>
        <member name="P:SolidRpc.NpmGenerator.Types.NpmPackageFile.Content">
            <summary>
            The file content(binary content not supported)
            </summary>
        </member>
    </members>
</doc>
